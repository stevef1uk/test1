// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetAccounts2HandlerFunc turns a function with the right signature into a get accounts2 handler
type GetAccounts2HandlerFunc func(GetAccounts2Params) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAccounts2HandlerFunc) Handle(params GetAccounts2Params) middleware.Responder {
	return fn(params)
}

// GetAccounts2Handler interface for that can handle valid get accounts2 params
type GetAccounts2Handler interface {
	Handle(GetAccounts2Params) middleware.Responder
}

// NewGetAccounts2 creates a new http.Handler for the get accounts2 operation
func NewGetAccounts2(ctx *middleware.Context, handler GetAccounts2Handler) *GetAccounts2 {
	return &GetAccounts2{Context: ctx, Handler: handler}
}

/*GetAccounts2 swagger:route GET /accounts2 getAccounts2

Gets some accounts2

Returns a list containing all accounts2.

*/
type GetAccounts2 struct {
	Context *middleware.Context
	Handler GetAccounts2Handler
}

func (o *GetAccounts2) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAccounts2Params()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
